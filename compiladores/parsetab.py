
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND ARRAY ATRIBUICAO BEGIN BOOLEAN CHAR COMPARACAO CONST DO ELSE END FALSE FOR FUNCTION ID IF INTEGER NUMERO OF OR PALAVRA PROCEDURE READ REAL RECORD THEN TO TRUE TYPE VAR WHILE WRITEprograma : declaracoes blocobloco : BEGIN comando lista_com ENDdeclaracoes : def_const def_tipos def_var def_rotina\n    def_const : constante def_const\n              | empty\n    \n    const_valor : PALAVRA\n                | exp_mat\n    \n    def_tipos : tipo def_tipos\n              | empty\n    \n    def_var : variavel def_var\n            | empty\n    \n    def_rotina : rotina def_rotina\n               | empty\n    constante : CONST ID '=' const_valor ';'tipo : TYPE ID '=' tipo_dado ';'variavel : VAR campo ';'campo : ID lista_id ':' tipo_dado\n    rotina : FUNCTION ID param_rotina ':' tipo_dado bloco_rotina\n           | PROCEDURE ID param_rotina bloco_rotina\n    \n    param_rotina : '(' campos ')'\n                 | empty\n    bloco_rotina : def_var bloco\n    lista_com : ';' comando lista_com\n              | empty\n    \n    comando : ID nome atribuicao\n            | WHILE exp_logica DO bloco_com\n            | IF exp_logica THEN bloco_com else\n            | FOR for DO bloco_com\n            | WRITE const_valor\n            | READ ID nome\n    \n    atribuicao : ATRIBUICAO exp\n               | empty\n    \n    exp : exp_mat\n        | exp_logica\n    \n    exp_logica : param_logico op_logico exp_logica\n               | '(' param_logico op_logico exp_logica ')'\n               | param_logico\n    \n    param_logico : parametro op_comp parametro\n                 | parametro\n    \n    exp_mat : parametro op_mat exp_mat\n            | '(' parametro op_mat exp_mat ')'\n            | parametro\n    \n    parametro : ID nome\n              | NUMERO\n              | FALSE\n              | TRUE\n    \n    nome : '.' ID nome\n         | '[' parametro ']'\n         | '(' lista_param ')'\n         | empty\n    \n    lista_param : parametro ',' lista_param\n                | parametro\n                | empty\n    \n    lista_id : ',' ID lista_id\n             | empty\n    campos : campo lista_campos\n    lista_campos : ';' campo lista_campos\n                 | empty\n    \n    tipo_dado : INTEGER\n              | REAL\n              | CHAR\n              | BOOLEAN\n              | ARRAY '[' NUMERO ']' OF tipo_dado\n              | RECORD campos END\n              | ID\n    for : ID ATRIBUICAO parametro TO parametro\n    else : ELSE bloco_com\n         | empty\n    \n    bloco_com : bloco\n              | comando\n    \n    op_logico : AND\n              | OR\n    \n    op_comp : '>'\n            | '<'\n            | COMPARACAO\n    \n    op_mat : '+'\n           | '-'\n           | '*'\n           | '/'\n    empty :"
    
_lr_action_items = {'CONST':([0,4,109,],[6,6,-14,]),'TYPE':([0,3,4,5,10,13,109,137,],[-80,12,-80,-5,12,-4,-14,-15,]),'VAR':([0,3,4,5,9,10,11,13,23,26,96,97,101,103,104,105,106,109,133,134,137,156,164,165,172,],[-80,-80,-80,-5,25,-80,-9,-4,25,-8,-80,-16,-65,-59,-60,-61,-62,-14,-21,25,-15,-64,25,-20,-63,]),'FUNCTION':([0,3,4,5,9,10,11,13,22,23,24,26,55,59,64,97,109,137,151,166,169,],[-80,-80,-80,-5,-80,-80,-9,-4,57,-80,-11,-8,57,-10,-2,-16,-14,-15,-19,-22,-18,]),'PROCEDURE':([0,3,4,5,9,10,11,13,22,23,24,26,55,59,64,97,109,137,151,166,169,],[-80,-80,-80,-5,-80,-80,-9,-4,58,-80,-11,-8,58,-10,-2,-16,-14,-15,-19,-22,-18,]),'BEGIN':([0,2,3,4,5,9,10,11,13,22,23,24,26,54,55,56,59,64,74,84,85,94,96,97,101,103,104,105,106,109,133,134,137,145,151,152,156,164,165,166,169,172,],[-80,8,-80,-80,-5,-80,-80,-9,-4,-80,-80,-11,-8,-3,-80,-13,-10,-2,8,8,8,-12,-80,-16,-65,-59,-60,-61,-62,-14,-21,-80,-15,8,-19,8,-64,-80,-20,-22,-18,-63,]),'$end':([1,7,64,],[0,-1,-2,]),'ID':([6,8,12,17,18,19,20,21,25,28,30,33,34,35,39,52,57,58,62,67,74,75,76,77,79,80,81,82,84,85,86,87,88,89,90,91,99,108,115,119,124,130,132,135,145,147,149,158,170,],[14,16,27,41,41,47,41,53,61,41,16,69,41,41,41,41,95,96,101,41,16,41,-71,-72,41,-73,-74,-75,16,16,41,41,-76,-77,-78,-79,136,61,41,41,41,41,61,101,16,41,101,61,101,]),'WHILE':([8,30,74,84,85,145,],[17,17,17,17,17,17,]),'IF':([8,30,74,84,85,145,],[18,18,18,18,18,18,]),'FOR':([8,30,74,84,85,145,],[19,19,19,19,19,19,]),'WRITE':([8,30,74,84,85,145,],[20,20,20,20,20,20,]),'READ':([8,30,74,84,85,145,],[21,21,21,21,21,21,]),'=':([14,27,],[28,62,]),';':([15,16,32,36,38,40,41,42,43,44,48,49,50,51,53,60,63,64,65,66,68,69,83,93,101,102,103,104,105,106,111,112,113,114,116,117,118,120,121,122,123,125,126,127,129,140,144,146,153,156,160,161,163,168,172,],[30,-80,-80,-50,-37,-39,-80,-44,-45,-46,-29,-6,-7,-42,-80,97,109,-2,30,-25,-32,-80,-43,-30,-65,137,-59,-60,-61,-62,-31,-33,-34,-39,-47,-48,-49,-26,-69,-70,-35,-38,-80,-28,-40,158,-27,-68,-17,-64,-36,-67,-41,158,-63,]),'END':([15,16,29,31,32,36,38,40,41,42,43,44,48,49,50,51,53,64,65,66,68,69,83,93,101,103,104,105,106,110,111,112,113,114,116,117,118,120,121,122,123,125,126,127,129,139,140,144,146,153,156,157,159,160,161,163,168,171,172,],[-80,-80,64,-24,-80,-50,-37,-39,-80,-44,-45,-46,-29,-6,-7,-42,-80,-2,-80,-25,-32,-80,-43,-30,-65,-59,-60,-61,-62,-23,-31,-33,-34,-39,-47,-48,-49,-26,-69,-70,-35,-38,-80,-28,-40,156,-80,-27,-68,-17,-64,-56,-58,-36,-67,-41,-80,-57,-63,]),'.':([16,41,53,69,],[33,33,33,33,]),'[':([16,41,53,69,107,],[34,34,34,34,138,]),'(':([16,17,18,20,28,41,53,67,69,75,76,77,87,88,89,90,91,95,96,124,130,],[35,39,39,52,52,35,35,115,35,39,-71,-72,52,-76,-77,-78,-79,132,132,39,52,]),'ATRIBUICAO':([16,32,36,47,69,116,117,118,],[-80,67,-50,86,-80,-47,-48,-49,]),'ELSE':([16,32,36,38,40,41,42,43,44,48,49,50,51,53,64,66,68,69,83,93,111,112,113,114,116,117,118,120,121,122,123,125,126,127,129,144,146,160,161,163,],[-80,-80,-50,-37,-39,-80,-44,-45,-46,-29,-6,-7,-42,-80,-2,-25,-32,-80,-43,-30,-31,-33,-34,-39,-47,-48,-49,-26,-69,-70,-35,-38,145,-28,-40,-27,-68,-36,-67,-41,]),'NUMERO':([17,18,20,28,34,35,39,52,67,75,76,77,79,80,81,82,86,87,88,89,90,91,115,119,124,130,138,147,],[42,42,42,42,42,42,42,42,42,42,-71,-72,42,-73,-74,-75,42,42,-76,-77,-78,-79,42,42,42,42,155,42,]),'FALSE':([17,18,20,28,34,35,39,52,67,75,76,77,79,80,81,82,86,87,88,89,90,91,115,119,124,130,147,],[43,43,43,43,43,43,43,43,43,43,-71,-72,43,-73,-74,-75,43,43,-76,-77,-78,-79,43,43,43,43,43,]),'TRUE':([17,18,20,28,34,35,39,52,67,75,76,77,79,80,81,82,86,87,88,89,90,91,115,119,124,130,147,],[44,44,44,44,44,44,44,44,44,44,-71,-72,44,-73,-74,-75,44,44,-76,-77,-78,-79,44,44,44,44,44,]),'PALAVRA':([20,28,],[49,49,]),')':([35,36,38,40,41,42,43,44,51,69,71,72,73,83,101,103,104,105,106,116,117,118,119,123,125,129,140,142,143,148,150,153,156,157,159,160,163,168,171,172,],[-80,-50,-37,-39,-80,-44,-45,-46,-42,-80,118,-52,-53,-43,-65,-59,-60,-61,-62,-47,-48,-49,-80,-35,-38,-40,-80,-51,160,163,165,-17,-64,-56,-58,-36,-41,-80,-57,-63,]),'>':([36,40,41,42,43,44,69,83,114,116,117,118,141,],[-50,80,-80,-44,-45,-46,-80,-43,80,-47,-48,-49,80,]),'<':([36,40,41,42,43,44,69,83,114,116,117,118,141,],[-50,81,-80,-44,-45,-46,-80,-43,81,-47,-48,-49,81,]),'COMPARACAO':([36,40,41,42,43,44,69,83,114,116,117,118,141,],[-50,82,-80,-44,-45,-46,-80,-43,82,-47,-48,-49,82,]),'AND':([36,38,40,41,42,43,44,69,78,83,114,116,117,118,125,141,],[-50,76,-39,-80,-44,-45,-46,-80,76,-43,-39,-47,-48,-49,-38,-39,]),'OR':([36,38,40,41,42,43,44,69,78,83,114,116,117,118,125,141,],[-50,77,-39,-80,-44,-45,-46,-80,77,-43,-39,-47,-48,-49,-38,-39,]),'DO':([36,37,38,40,41,42,43,44,46,69,83,116,117,118,123,125,160,162,],[-50,74,-37,-39,-80,-44,-45,-46,85,-80,-43,-47,-48,-49,-35,-38,-36,-66,]),'THEN':([36,38,40,41,42,43,44,45,69,83,116,117,118,123,125,160,],[-50,-37,-39,-80,-44,-45,-46,84,-80,-43,-47,-48,-49,-35,-38,-36,]),'+':([36,41,42,43,44,51,69,83,92,114,116,117,118,141,],[-50,-80,-44,-45,-46,88,-80,-43,88,88,-47,-48,-49,88,]),'-':([36,41,42,43,44,51,69,83,92,114,116,117,118,141,],[-50,-80,-44,-45,-46,89,-80,-43,89,89,-47,-48,-49,89,]),'*':([36,41,42,43,44,51,69,83,92,114,116,117,118,141,],[-50,-80,-44,-45,-46,90,-80,-43,90,90,-47,-48,-49,90,]),'/':([36,41,42,43,44,51,69,83,92,114,116,117,118,141,],[-50,-80,-44,-45,-46,91,-80,-43,91,91,-47,-48,-49,91,]),']':([36,41,42,43,44,69,70,83,116,117,118,155,],[-50,-80,-44,-45,-46,-80,117,-43,-47,-48,-49,167,]),',':([36,41,42,43,44,61,69,72,83,116,117,118,136,],[-50,-80,-44,-45,-46,99,-80,119,-43,-47,-48,-49,99,]),'TO':([36,41,42,43,44,69,83,116,117,118,128,],[-50,-80,-44,-45,-46,-80,-43,-47,-48,-49,147,]),':':([61,95,98,100,131,133,136,154,165,],[-80,-80,135,-55,149,-21,-80,-54,-20,]),'INTEGER':([62,135,149,170,],[103,103,103,103,]),'REAL':([62,135,149,170,],[104,104,104,104,]),'CHAR':([62,135,149,170,],[105,105,105,105,]),'BOOLEAN':([62,135,149,170,],[106,106,106,106,]),'ARRAY':([62,135,149,170,],[107,107,107,107,]),'RECORD':([62,135,149,170,],[108,108,108,108,]),'OF':([167,],[170,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracoes':([0,],[2,]),'def_const':([0,4,],[3,13,]),'constante':([0,4,],[4,4,]),'empty':([0,3,4,9,10,15,16,22,23,32,35,41,53,55,61,65,69,95,96,119,126,134,136,140,164,168,],[5,11,5,24,11,31,36,56,24,68,73,36,36,56,100,31,36,133,133,73,146,24,100,159,24,159,]),'bloco':([2,74,84,85,145,152,],[7,121,121,121,121,166,]),'def_tipos':([3,10,],[9,26,]),'tipo':([3,10,],[10,10,]),'comando':([8,30,74,84,85,145,],[15,65,122,122,122,122,]),'def_var':([9,23,134,164,],[22,59,152,152,]),'variavel':([9,23,134,164,],[23,23,23,23,]),'lista_com':([15,65,],[29,110,]),'nome':([16,41,53,69,],[32,83,93,116,]),'exp_logica':([17,18,67,75,124,],[37,45,113,123,143,]),'param_logico':([17,18,39,67,75,115,124,],[38,38,78,38,38,78,38,]),'parametro':([17,18,20,28,34,35,39,52,67,75,79,86,87,115,119,124,130,147,],[40,40,51,51,70,72,40,92,114,40,125,128,51,141,72,40,51,162,]),'for':([19,],[46,]),'const_valor':([20,28,],[48,63,]),'exp_mat':([20,28,67,87,130,],[50,50,112,129,148,]),'def_rotina':([22,55,],[54,94,]),'rotina':([22,55,],[55,55,]),'campo':([25,108,132,158,],[60,140,140,168,]),'atribuicao':([32,],[66,]),'lista_param':([35,119,],[71,142,]),'op_logico':([38,78,],[75,124,]),'op_comp':([40,114,141,],[79,79,79,]),'op_mat':([51,92,114,141,],[87,130,87,130,]),'lista_id':([61,136,],[98,154,]),'tipo_dado':([62,135,149,170,],[102,153,164,172,]),'exp':([67,],[111,]),'bloco_com':([74,84,85,145,],[120,126,127,161,]),'param_rotina':([95,96,],[131,134,]),'campos':([108,132,],[139,150,]),'else':([126,],[144,]),'bloco_rotina':([134,164,],[151,169,]),'lista_campos':([140,168,],[157,171,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracoes bloco','programa',2,'p_programa','sintatico.py',7),
  ('bloco -> BEGIN comando lista_com END','bloco',4,'p_bloco','sintatico.py',10),
  ('declaracoes -> def_const def_tipos def_var def_rotina','declaracoes',4,'p_declaracoes','sintatico.py',13),
  ('def_const -> constante def_const','def_const',2,'p_def_const','sintatico.py',17),
  ('def_const -> empty','def_const',1,'p_def_const','sintatico.py',18),
  ('const_valor -> PALAVRA','const_valor',1,'p_const_valor','sintatico.py',23),
  ('const_valor -> exp_mat','const_valor',1,'p_const_valor','sintatico.py',24),
  ('def_tipos -> tipo def_tipos','def_tipos',2,'p_def_tipos','sintatico.py',30),
  ('def_tipos -> empty','def_tipos',1,'p_def_tipos','sintatico.py',31),
  ('def_var -> variavel def_var','def_var',2,'p_def_var','sintatico.py',36),
  ('def_var -> empty','def_var',1,'p_def_var','sintatico.py',37),
  ('def_rotina -> rotina def_rotina','def_rotina',2,'p_def_rotina','sintatico.py',42),
  ('def_rotina -> empty','def_rotina',1,'p_def_rotina','sintatico.py',43),
  ('constante -> CONST ID = const_valor ;','constante',5,'p_constante','sintatico.py',47),
  ('tipo -> TYPE ID = tipo_dado ;','tipo',5,'p_tipo','sintatico.py',50),
  ('variavel -> VAR campo ;','variavel',3,'p_variavel','sintatico.py',53),
  ('campo -> ID lista_id : tipo_dado','campo',4,'p_campo','sintatico.py',56),
  ('rotina -> FUNCTION ID param_rotina : tipo_dado bloco_rotina','rotina',6,'p_rotina','sintatico.py',60),
  ('rotina -> PROCEDURE ID param_rotina bloco_rotina','rotina',4,'p_rotina','sintatico.py',61),
  ('param_rotina -> ( campos )','param_rotina',3,'p_param_rotina','sintatico.py',66),
  ('param_rotina -> empty','param_rotina',1,'p_param_rotina','sintatico.py',67),
  ('bloco_rotina -> def_var bloco','bloco_rotina',2,'p_bloco_rotina','sintatico.py',71),
  ('lista_com -> ; comando lista_com','lista_com',3,'p_lista_com','sintatico.py',75),
  ('lista_com -> empty','lista_com',1,'p_lista_com','sintatico.py',76),
  ('comando -> ID nome atribuicao','comando',3,'p_comando','sintatico.py',81),
  ('comando -> WHILE exp_logica DO bloco_com','comando',4,'p_comando','sintatico.py',82),
  ('comando -> IF exp_logica THEN bloco_com else','comando',5,'p_comando','sintatico.py',83),
  ('comando -> FOR for DO bloco_com','comando',4,'p_comando','sintatico.py',84),
  ('comando -> WRITE const_valor','comando',2,'p_comando','sintatico.py',85),
  ('comando -> READ ID nome','comando',3,'p_comando','sintatico.py',86),
  ('atribuicao -> ATRIBUICAO exp','atribuicao',2,'p_atribuicao','sintatico.py',91),
  ('atribuicao -> empty','atribuicao',1,'p_atribuicao','sintatico.py',92),
  ('exp -> exp_mat','exp',1,'p_exp','sintatico.py',97),
  ('exp -> exp_logica','exp',1,'p_exp','sintatico.py',98),
  ('exp_logica -> param_logico op_logico exp_logica','exp_logica',3,'p_exp_logica','sintatico.py',103),
  ('exp_logica -> ( param_logico op_logico exp_logica )','exp_logica',5,'p_exp_logica','sintatico.py',104),
  ('exp_logica -> param_logico','exp_logica',1,'p_exp_logica','sintatico.py',105),
  ('param_logico -> parametro op_comp parametro','param_logico',3,'p_param_logico','sintatico.py',110),
  ('param_logico -> parametro','param_logico',1,'p_param_logico','sintatico.py',111),
  ('exp_mat -> parametro op_mat exp_mat','exp_mat',3,'p_exp_mat','sintatico.py',116),
  ('exp_mat -> ( parametro op_mat exp_mat )','exp_mat',5,'p_exp_mat','sintatico.py',117),
  ('exp_mat -> parametro','exp_mat',1,'p_exp_mat','sintatico.py',118),
  ('parametro -> ID nome','parametro',2,'p_parametro','sintatico.py',123),
  ('parametro -> NUMERO','parametro',1,'p_parametro','sintatico.py',124),
  ('parametro -> FALSE','parametro',1,'p_parametro','sintatico.py',125),
  ('parametro -> TRUE','parametro',1,'p_parametro','sintatico.py',126),
  ('nome -> . ID nome','nome',3,'p_nome','sintatico.py',131),
  ('nome -> [ parametro ]','nome',3,'p_nome','sintatico.py',132),
  ('nome -> ( lista_param )','nome',3,'p_nome','sintatico.py',133),
  ('nome -> empty','nome',1,'p_nome','sintatico.py',134),
  ('lista_param -> parametro , lista_param','lista_param',3,'p_lista_param','sintatico.py',139),
  ('lista_param -> parametro','lista_param',1,'p_lista_param','sintatico.py',140),
  ('lista_param -> empty','lista_param',1,'p_lista_param','sintatico.py',141),
  ('lista_id -> , ID lista_id','lista_id',3,'p_lista_id','sintatico.py',146),
  ('lista_id -> empty','lista_id',1,'p_lista_id','sintatico.py',147),
  ('campos -> campo lista_campos','campos',2,'p_campos','sintatico.py',151),
  ('lista_campos -> ; campo lista_campos','lista_campos',3,'p_lista_campos','sintatico.py',155),
  ('lista_campos -> empty','lista_campos',1,'p_lista_campos','sintatico.py',156),
  ('tipo_dado -> INTEGER','tipo_dado',1,'p_tipo_dado','sintatico.py',161),
  ('tipo_dado -> REAL','tipo_dado',1,'p_tipo_dado','sintatico.py',162),
  ('tipo_dado -> CHAR','tipo_dado',1,'p_tipo_dado','sintatico.py',163),
  ('tipo_dado -> BOOLEAN','tipo_dado',1,'p_tipo_dado','sintatico.py',164),
  ('tipo_dado -> ARRAY [ NUMERO ] OF tipo_dado','tipo_dado',6,'p_tipo_dado','sintatico.py',165),
  ('tipo_dado -> RECORD campos END','tipo_dado',3,'p_tipo_dado','sintatico.py',166),
  ('tipo_dado -> ID','tipo_dado',1,'p_tipo_dado','sintatico.py',167),
  ('for -> ID ATRIBUICAO parametro TO parametro','for',5,'p_for','sintatico.py',171),
  ('else -> ELSE bloco_com','else',2,'p_else','sintatico.py',175),
  ('else -> empty','else',1,'p_else','sintatico.py',176),
  ('bloco_com -> bloco','bloco_com',1,'p_bloco_com','sintatico.py',181),
  ('bloco_com -> comando','bloco_com',1,'p_bloco_com','sintatico.py',182),
  ('op_logico -> AND','op_logico',1,'p_op_logico','sintatico.py',187),
  ('op_logico -> OR','op_logico',1,'p_op_logico','sintatico.py',188),
  ('op_comp -> >','op_comp',1,'p_op_comp','sintatico.py',193),
  ('op_comp -> <','op_comp',1,'p_op_comp','sintatico.py',194),
  ('op_comp -> COMPARACAO','op_comp',1,'p_op_comp','sintatico.py',195),
  ('op_mat -> +','op_mat',1,'p_op_mat','sintatico.py',200),
  ('op_mat -> -','op_mat',1,'p_op_mat','sintatico.py',201),
  ('op_mat -> *','op_mat',1,'p_op_mat','sintatico.py',202),
  ('op_mat -> /','op_mat',1,'p_op_mat','sintatico.py',203),
  ('empty -> <empty>','empty',0,'p_empty','sintatico.py',207),
]
