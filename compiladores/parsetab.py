
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND ARRAY ATRIBUICAO BEGIN BOOLEAN CHAR COMPARACAO CONST DO ELSE END FALSE FOR FUNCTION ID IF INTEGER NUMERO OF OR PALAVRA PROCEDURE READ REAL RECORD THEN TO TRUE TYPE VAR WHILE WRITEPROGRAMA : DECLARACOES BLOCOBLOCO : BEGIN COMANDO LISTA_COM ENDLISTA_COM : LISTA_COM : ';' COMANDO LISTA_COMDECLARACOES : DEF_CONST DEF_TIPOS DEF_VAR DEF_ROTINADEF_CONST : DEF_CONST : CONSTANTE DEF_CONSTCONSTANTE : CONST ID '=' CONST_VALOR ';'CONST_VALOR : PALAVRA\n                   | EXP_MATDEF_TIPOS : DEF_TIPOS : TIPO DEF_TIPOSTIPO : TYPE ID '=' TIPO_DADO ';'TIPO_DADO : INTEGER\n                 | REAL\n                 | CHAR\n                 | BOOLEAN\n                 | ARRAY '[' NUMERO ']' OF TIPO_DADO\n                 | RECORD CAMPOS END\n                 | IDDEF_VAR : DEF_VAR : VARIAVEL DEF_VARVARIAVEL : VAR CAMPOS ';'CAMPOS : CAMPO LISTA_CAMPOSLISTA_CAMPOS : LISTA_CAMPOS : ';' CAMPO LISTA_CAMPOSCAMPO : ID LISTA_ID ':' TIPO_DADOLISTA_ID : LISTA_ID : ',' ID LISTA_IDDEF_ROTINA : DEF_ROTINA : ROTINA DEF_ROTINAROTINA : FUNCTION ID PARAM_ROTINA ':' TIPO_DADO BLOCO_ROTINA\n              | PROCEDURE ID PARAM_ROTINA BLOCO_ROTINAPARAM_ROTINA : PARAM_ROTINA : '(' CAMPOS ')'BLOCO_ROTINA : DEF_VAR BLOCOCOMANDO : ID NOME atribuicao\n               | WHILE EXP_LOGICA DO bloco_com\n               | IF EXP_LOGICA THEN bloco_com alternativa_else\n               | FOR FOR_PARAMS DO bloco_com\n               | WRITE CONST_VALOR\n               | READ ID NOMEbloco_com : BLOCO\n               | COMANDOatribuicao : ATRIBUICAO EXPalternativa_else : ELSE bloco_com\n                        | FOR_PARAMS : ID ATRIBUICAO PARAMETRO TO PARAMETROEXP : EXP_MAT\n           | EXP_LOGICAEXP_LOGICA : PARAM_LOGICO OP_LOGICO EXP_LOGICA\n                  | '(' PARAM_LOGICO OP_LOGICO EXP_LOGICA ')'\n                  | PARAM_LOGICOPARAM_LOGICO : PARAMETRO OP_COMP PARAMETRO\n                    | PARAMETROEXP_MAT : PARAMETRO OP_MAT EXP_MAT\n               | '(' PARAMETRO OP_MAT EXP_MAT ')'\n               | PARAMETROOP_LOGICO : AND\n                 | OROP_COMP : '>'\n               | '<'\n               | COMPARACAOOP_MAT : '+'\n              | '-'\n              | '*'\n              | '/'PARAMETRO : ID\n                 | NOME\n                 | NUMERO\n                 | FALSE\n                 | TRUENOME : '.' ID NOME\n            | '[' PARAMETRO ']'\n            | '(' LISTA_PARAM ')'\n            | LISTA_PARAM : PARAMETRO ',' LISTA_PARAM\n                   | PARAMETRO"
    
_lr_action_items = {'TYPE':([0,3,4,9,11,104,132,],[-6,10,-6,10,-7,-8,-13,]),'VAR':([0,3,4,8,9,11,21,23,90,91,96,98,99,100,101,104,128,132,150,155,156,161,],[-6,-11,-6,22,-11,-7,22,-12,-34,-23,-20,-14,-15,-16,-17,-8,22,-13,-19,22,-35,-18,]),'FUNCTION':([0,3,4,8,9,11,20,21,23,51,54,60,91,104,132,144,157,159,],[-6,-11,-6,-21,-11,-7,52,-21,-12,52,-22,-2,-23,-8,-13,-33,-36,-32,]),'PROCEDURE':([0,3,4,8,9,11,20,21,23,51,54,60,91,104,132,144,157,159,],[-6,-11,-6,-21,-11,-7,53,-21,-12,53,-22,-2,-23,-8,-13,-33,-36,-32,]),'BEGIN':([0,2,3,4,8,9,11,20,21,23,50,51,54,60,68,78,79,88,90,91,96,98,99,100,101,104,128,132,139,144,145,150,155,156,157,159,161,],[-6,7,-11,-6,-21,-11,-7,-30,-21,-12,-5,-30,-22,-2,7,7,7,-31,-34,-23,-20,-14,-15,-16,-17,-8,-21,-13,7,-33,7,-19,-21,-35,-36,-32,-18,]),'CONST':([0,4,104,],[5,5,-8,]),'$end':([1,6,60,],[0,-1,-2,]),'ID':([5,7,10,15,16,17,18,19,22,25,27,29,30,31,34,48,52,53,58,63,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,93,95,103,110,114,119,125,127,130,139,140,142,160,],[12,14,24,36,36,43,36,49,57,36,14,64,36,36,36,36,89,90,96,36,14,36,-59,-60,36,-61,-62,-63,14,14,36,36,-64,-65,-66,-67,57,131,57,36,36,36,36,57,96,14,36,96,96,]),'WHILE':([7,27,68,78,79,139,],[15,15,15,15,15,15,]),'IF':([7,27,68,78,79,139,],[16,16,16,16,16,16,]),'FOR':([7,27,68,78,79,139,],[17,17,17,17,17,17,]),'WRITE':([7,27,68,78,79,139,],[18,18,18,18,18,18,]),'READ':([7,27,68,78,79,139,],[19,19,19,19,19,19,]),'=':([12,24,],[25,58,]),'END':([13,18,26,33,35,36,37,38,39,40,44,45,46,47,49,56,60,61,62,63,64,69,70,71,74,75,76,77,81,82,83,84,85,87,92,96,98,99,100,101,105,106,107,108,109,111,112,113,115,116,117,118,120,121,122,124,129,134,138,146,147,150,151,152,154,161,],[-3,-76,60,-53,-55,-68,-69,-70,-71,-72,-41,-9,-10,-58,-76,-25,-2,-3,-37,-76,-76,-76,-59,-60,-76,-61,-62,-63,-76,-64,-65,-66,-67,-42,-24,-20,-14,-15,-16,-17,-4,-45,-49,-50,-55,-73,-74,-75,-38,-43,-44,-51,-54,-47,-40,-56,-25,150,-39,-26,-27,-19,-52,-46,-57,-18,]),';':([13,18,25,33,35,36,37,38,39,40,44,45,46,47,49,55,56,59,60,61,62,63,64,69,70,71,74,75,76,77,81,82,83,84,85,87,92,96,97,98,99,100,101,106,107,108,109,111,112,113,115,116,117,118,120,121,122,124,129,138,146,147,150,151,152,154,161,],[27,-76,-76,-53,-55,-68,-69,-70,-71,-72,-41,-9,-10,-58,-76,91,93,104,-2,27,-37,-76,-76,-76,-59,-60,-76,-61,-62,-63,-76,-64,-65,-66,-67,-42,-24,-20,132,-14,-15,-16,-17,-45,-49,-50,-55,-73,-74,-75,-38,-43,-44,-51,-54,-47,-40,-56,93,-39,-26,-27,-19,-52,-46,-57,-18,]),'.':([14,15,16,18,25,30,31,34,48,49,63,64,69,70,71,74,75,76,77,80,81,82,83,84,85,110,114,119,125,140,],[29,29,29,29,29,29,29,29,29,29,29,29,29,-59,-60,29,-61,-62,-63,29,29,-64,-65,-66,-67,29,29,29,29,29,]),'[':([14,15,16,18,25,30,31,34,48,49,63,64,69,70,71,74,75,76,77,80,81,82,83,84,85,102,110,114,119,125,140,],[30,30,30,30,30,30,30,30,30,30,30,30,30,-59,-60,30,-61,-62,-63,30,30,-64,-65,-66,-67,133,30,30,30,30,30,]),'(':([14,15,16,18,25,30,31,34,48,49,63,64,69,70,71,74,75,76,77,80,81,82,83,84,85,89,90,110,114,119,125,140,],[31,34,34,48,48,31,31,31,31,31,110,31,34,-59,-60,31,-61,-62,-63,31,48,-64,-65,-66,-67,127,127,31,31,34,48,31,]),'ATRIBUICAO':([14,28,43,64,111,112,113,],[-76,63,80,-76,-73,-74,-75,]),'NUMERO':([15,16,18,25,30,31,34,48,63,69,70,71,74,75,76,77,80,81,82,83,84,85,110,114,119,125,133,140,],[38,38,38,38,38,38,38,38,38,38,-59,-60,38,-61,-62,-63,38,38,-64,-65,-66,-67,38,38,38,38,149,38,]),'FALSE':([15,16,18,25,30,31,34,48,63,69,70,71,74,75,76,77,80,81,82,83,84,85,110,114,119,125,140,],[39,39,39,39,39,39,39,39,39,39,-59,-60,39,-61,-62,-63,39,39,-64,-65,-66,-67,39,39,39,39,39,]),'TRUE':([15,16,18,25,30,31,34,48,63,69,70,71,74,75,76,77,80,81,82,83,84,85,110,114,119,125,140,],[40,40,40,40,40,40,40,40,40,40,-59,-60,40,-61,-62,-63,40,40,-64,-65,-66,-67,40,40,40,40,40,]),'>':([15,16,34,35,36,37,38,39,40,63,64,69,70,71,73,109,110,111,112,113,119,135,],[-76,-76,-76,75,-68,-69,-70,-71,-72,-76,-76,-76,-59,-60,75,75,-76,-73,-74,-75,-76,75,]),'<':([15,16,34,35,36,37,38,39,40,63,64,69,70,71,73,109,110,111,112,113,119,135,],[-76,-76,-76,76,-68,-69,-70,-71,-72,-76,-76,-76,-59,-60,76,76,-76,-73,-74,-75,-76,76,]),'COMPARACAO':([15,16,34,35,36,37,38,39,40,63,64,69,70,71,73,109,110,111,112,113,119,135,],[-76,-76,-76,77,-68,-69,-70,-71,-72,-76,-76,-76,-59,-60,77,77,-76,-73,-74,-75,-76,77,]),'AND':([15,16,33,34,35,36,37,38,39,40,63,64,69,70,71,72,73,74,75,76,77,109,110,111,112,113,119,120,135,],[-76,-76,70,-76,-55,-68,-69,-70,-71,-72,-76,-76,-76,-59,-60,70,-55,-76,-61,-62,-63,-55,-76,-73,-74,-75,-76,-54,-55,]),'OR':([15,16,33,34,35,36,37,38,39,40,63,64,69,70,71,72,73,74,75,76,77,109,110,111,112,113,119,120,135,],[-76,-76,71,-76,-55,-68,-69,-70,-71,-72,-76,-76,-76,-59,-60,71,-55,-76,-61,-62,-63,-55,-76,-73,-74,-75,-76,-54,-55,]),'DO':([15,32,33,35,36,37,38,39,40,42,64,69,70,71,74,75,76,77,111,112,113,118,120,140,151,153,],[-76,68,-53,-55,-68,-69,-70,-71,-72,79,-76,-76,-59,-60,-76,-61,-62,-63,-73,-74,-75,-51,-54,-76,-52,-48,]),'THEN':([16,33,35,36,37,38,39,40,41,64,69,70,71,74,75,76,77,111,112,113,118,120,151,],[-76,-53,-55,-68,-69,-70,-71,-72,78,-76,-76,-59,-60,-76,-61,-62,-63,-73,-74,-75,-51,-54,-52,]),'PALAVRA':([18,25,],[45,45,]),'+':([18,25,36,37,38,39,40,47,48,63,64,81,82,83,84,85,86,109,110,111,112,113,125,135,],[-76,-76,-68,-69,-70,-71,-72,82,-76,-76,-76,-76,-64,-65,-66,-67,82,82,-76,-73,-74,-75,-76,82,]),'-':([18,25,36,37,38,39,40,47,48,63,64,81,82,83,84,85,86,109,110,111,112,113,125,135,],[-76,-76,-68,-69,-70,-71,-72,83,-76,-76,-76,-76,-64,-65,-66,-67,83,83,-76,-73,-74,-75,-76,83,]),'*':([18,25,36,37,38,39,40,47,48,63,64,81,82,83,84,85,86,109,110,111,112,113,125,135,],[-76,-76,-68,-69,-70,-71,-72,84,-76,-76,-76,-76,-64,-65,-66,-67,84,84,-76,-73,-74,-75,-76,84,]),'/':([18,25,36,37,38,39,40,47,48,63,64,81,82,83,84,85,86,109,110,111,112,113,125,135,],[-76,-76,-68,-69,-70,-71,-72,85,-76,-76,-76,-76,-64,-65,-66,-67,85,85,-76,-73,-74,-75,-76,85,]),'ELSE':([18,33,35,36,37,38,39,40,44,45,46,47,49,60,62,63,64,69,70,71,74,75,76,77,81,82,83,84,85,87,106,107,108,109,111,112,113,115,116,117,118,120,121,122,124,138,151,152,154,],[-76,-53,-55,-68,-69,-70,-71,-72,-41,-9,-10,-58,-76,-2,-37,-76,-76,-76,-59,-60,-76,-61,-62,-63,-76,-64,-65,-66,-67,-42,-45,-49,-50,-55,-73,-74,-75,-38,-43,-44,-51,-54,139,-40,-56,-39,-52,-46,-57,]),']':([30,36,37,38,39,40,64,65,111,112,113,149,],[-76,-68,-69,-70,-71,-72,-76,112,-73,-74,-75,158,]),',':([31,34,36,37,38,39,40,48,57,64,67,73,86,110,111,112,113,114,131,135,],[-76,-76,-68,-69,-70,-71,-72,-76,95,-76,114,114,114,-76,-73,-74,-75,-76,95,114,]),')':([31,33,34,35,36,37,38,39,40,47,48,56,64,66,67,69,70,71,73,74,75,76,77,81,82,83,84,85,86,92,96,98,99,100,101,110,111,112,113,114,118,119,120,124,125,129,135,136,137,141,143,146,147,150,151,154,161,],[-76,-53,-76,-55,-68,-69,-70,-71,-72,-58,-76,-25,-76,113,-78,-76,-59,-60,-78,-76,-61,-62,-63,-76,-64,-65,-66,-67,-78,-24,-20,-14,-15,-16,-17,-76,-73,-74,-75,-76,-51,-76,-54,-56,-76,-25,-78,-77,151,154,156,-26,-27,-19,-52,-57,-18,]),'TO':([36,37,38,39,40,64,80,111,112,113,123,],[-68,-69,-70,-71,-72,-76,-76,-73,-74,-75,140,]),':':([57,89,94,126,131,148,156,],[-28,-34,130,142,-28,-29,-35,]),'INTEGER':([58,130,142,160,],[98,98,98,98,]),'REAL':([58,130,142,160,],[99,99,99,99,]),'CHAR':([58,130,142,160,],[100,100,100,100,]),'BOOLEAN':([58,130,142,160,],[101,101,101,101,]),'ARRAY':([58,130,142,160,],[102,102,102,102,]),'RECORD':([58,130,142,160,],[103,103,103,103,]),'OF':([158,],[160,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'DECLARACOES':([0,],[2,]),'DEF_CONST':([0,4,],[3,11,]),'CONSTANTE':([0,4,],[4,4,]),'BLOCO':([2,68,78,79,139,145,],[6,116,116,116,116,157,]),'DEF_TIPOS':([3,9,],[8,23,]),'TIPO':([3,9,],[9,9,]),'COMANDO':([7,27,68,78,79,139,],[13,61,117,117,117,117,]),'DEF_VAR':([8,21,128,155,],[20,54,145,145,]),'VARIAVEL':([8,21,128,155,],[21,21,21,21,]),'LISTA_COM':([13,61,],[26,105,]),'NOME':([14,15,16,18,25,30,31,34,48,49,63,64,69,74,80,81,110,114,119,125,140,],[28,37,37,37,37,37,37,37,37,87,37,111,37,37,37,37,37,37,37,37,37,]),'EXP_LOGICA':([15,16,63,69,119,],[32,41,108,118,137,]),'PARAM_LOGICO':([15,16,34,63,69,110,119,],[33,33,72,33,33,72,33,]),'PARAMETRO':([15,16,18,25,30,31,34,48,63,69,74,80,81,110,114,119,125,140,],[35,35,47,47,65,67,73,86,109,35,120,123,47,135,67,35,47,153,]),'FOR_PARAMS':([17,],[42,]),'CONST_VALOR':([18,25,],[44,59,]),'EXP_MAT':([18,25,63,81,125,],[46,46,107,124,141,]),'DEF_ROTINA':([20,51,],[50,88,]),'ROTINA':([20,51,],[51,51,]),'CAMPOS':([22,103,127,],[55,134,143,]),'CAMPO':([22,93,103,127,],[56,129,56,56,]),'atribuicao':([28,],[62,]),'LISTA_PARAM':([31,34,48,110,114,],[66,66,66,66,136,]),'OP_LOGICO':([33,72,],[69,119,]),'OP_COMP':([35,73,109,135,],[74,74,74,74,]),'OP_MAT':([47,86,109,135,],[81,125,81,125,]),'LISTA_CAMPOS':([56,129,],[92,146,]),'LISTA_ID':([57,131,],[94,148,]),'TIPO_DADO':([58,130,142,160,],[97,147,155,161,]),'EXP':([63,],[106,]),'bloco_com':([68,78,79,139,],[115,121,122,152,]),'PARAM_ROTINA':([89,90,],[126,128,]),'alternativa_else':([121,],[138,]),'BLOCO_ROTINA':([128,155,],[144,159,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> DECLARACOES BLOCO','PROGRAMA',2,'p_programa','sintatico.py',7),
  ('BLOCO -> BEGIN COMANDO LISTA_COM END','BLOCO',4,'p_bloco','sintatico.py',11),
  ('LISTA_COM -> <empty>','LISTA_COM',0,'p_lista_com_vazia','sintatico.py',15),
  ('LISTA_COM -> ; COMANDO LISTA_COM','LISTA_COM',3,'p_lista_com','sintatico.py',19),
  ('DECLARACOES -> DEF_CONST DEF_TIPOS DEF_VAR DEF_ROTINA','DECLARACOES',4,'p_declaracoes','sintatico.py',23),
  ('DEF_CONST -> <empty>','DEF_CONST',0,'p_def_const_vazio','sintatico.py',27),
  ('DEF_CONST -> CONSTANTE DEF_CONST','DEF_CONST',2,'p_def_const','sintatico.py',31),
  ('CONSTANTE -> CONST ID = CONST_VALOR ;','CONSTANTE',5,'p_constante','sintatico.py',36),
  ('CONST_VALOR -> PALAVRA','CONST_VALOR',1,'p_const_valor','sintatico.py',40),
  ('CONST_VALOR -> EXP_MAT','CONST_VALOR',1,'p_const_valor','sintatico.py',41),
  ('DEF_TIPOS -> <empty>','DEF_TIPOS',0,'p_def_tipos_vazio','sintatico.py',49),
  ('DEF_TIPOS -> TIPO DEF_TIPOS','DEF_TIPOS',2,'p_def_tipos','sintatico.py',53),
  ('TIPO -> TYPE ID = TIPO_DADO ;','TIPO',5,'p_tipo','sintatico.py',57),
  ('TIPO_DADO -> INTEGER','TIPO_DADO',1,'p_tipo_dado','sintatico.py',61),
  ('TIPO_DADO -> REAL','TIPO_DADO',1,'p_tipo_dado','sintatico.py',62),
  ('TIPO_DADO -> CHAR','TIPO_DADO',1,'p_tipo_dado','sintatico.py',63),
  ('TIPO_DADO -> BOOLEAN','TIPO_DADO',1,'p_tipo_dado','sintatico.py',64),
  ('TIPO_DADO -> ARRAY [ NUMERO ] OF TIPO_DADO','TIPO_DADO',6,'p_tipo_dado','sintatico.py',65),
  ('TIPO_DADO -> RECORD CAMPOS END','TIPO_DADO',3,'p_tipo_dado','sintatico.py',66),
  ('TIPO_DADO -> ID','TIPO_DADO',1,'p_tipo_dado','sintatico.py',67),
  ('DEF_VAR -> <empty>','DEF_VAR',0,'p_def_var_vazio','sintatico.py',79),
  ('DEF_VAR -> VARIAVEL DEF_VAR','DEF_VAR',2,'p_def_var','sintatico.py',83),
  ('VARIAVEL -> VAR CAMPOS ;','VARIAVEL',3,'p_variavel','sintatico.py',87),
  ('CAMPOS -> CAMPO LISTA_CAMPOS','CAMPOS',2,'p_campos','sintatico.py',91),
  ('LISTA_CAMPOS -> <empty>','LISTA_CAMPOS',0,'p_lista_campos_vazio','sintatico.py',95),
  ('LISTA_CAMPOS -> ; CAMPO LISTA_CAMPOS','LISTA_CAMPOS',3,'p_lista_campos','sintatico.py',99),
  ('CAMPO -> ID LISTA_ID : TIPO_DADO','CAMPO',4,'p_campo','sintatico.py',103),
  ('LISTA_ID -> <empty>','LISTA_ID',0,'p_lista_id_vazio','sintatico.py',107),
  ('LISTA_ID -> , ID LISTA_ID','LISTA_ID',3,'p_lista_id','sintatico.py',111),
  ('DEF_ROTINA -> <empty>','DEF_ROTINA',0,'p_def_rotina_vazio','sintatico.py',116),
  ('DEF_ROTINA -> ROTINA DEF_ROTINA','DEF_ROTINA',2,'p_def_rotina','sintatico.py',120),
  ('ROTINA -> FUNCTION ID PARAM_ROTINA : TIPO_DADO BLOCO_ROTINA','ROTINA',6,'p_rotina','sintatico.py',124),
  ('ROTINA -> PROCEDURE ID PARAM_ROTINA BLOCO_ROTINA','ROTINA',4,'p_rotina','sintatico.py',125),
  ('PARAM_ROTINA -> <empty>','PARAM_ROTINA',0,'p_param_rotina_vazio','sintatico.py',132),
  ('PARAM_ROTINA -> ( CAMPOS )','PARAM_ROTINA',3,'p_param_rotina','sintatico.py',136),
  ('BLOCO_ROTINA -> DEF_VAR BLOCO','BLOCO_ROTINA',2,'p_bloco_rotina','sintatico.py',140),
  ('COMANDO -> ID NOME atribuicao','COMANDO',3,'p_comando','sintatico.py',145),
  ('COMANDO -> WHILE EXP_LOGICA DO bloco_com','COMANDO',4,'p_comando','sintatico.py',146),
  ('COMANDO -> IF EXP_LOGICA THEN bloco_com alternativa_else','COMANDO',5,'p_comando','sintatico.py',147),
  ('COMANDO -> FOR FOR_PARAMS DO bloco_com','COMANDO',4,'p_comando','sintatico.py',148),
  ('COMANDO -> WRITE CONST_VALOR','COMANDO',2,'p_comando','sintatico.py',149),
  ('COMANDO -> READ ID NOME','COMANDO',3,'p_comando','sintatico.py',150),
  ('bloco_com -> BLOCO','bloco_com',1,'p_bloco_com','sintatico.py',165),
  ('bloco_com -> COMANDO','bloco_com',1,'p_bloco_com','sintatico.py',166),
  ('atribuicao -> ATRIBUICAO EXP','atribuicao',2,'p_atribuicao','sintatico.py',171),
  ('alternativa_else -> ELSE bloco_com','alternativa_else',2,'p_alternativa_else','sintatico.py',176),
  ('alternativa_else -> <empty>','alternativa_else',0,'p_alternativa_else','sintatico.py',177),
  ('FOR_PARAMS -> ID ATRIBUICAO PARAMETRO TO PARAMETRO','FOR_PARAMS',5,'p_for_params','sintatico.py',184),
  ('EXP -> EXP_MAT','EXP',1,'p_exp','sintatico.py',189),
  ('EXP -> EXP_LOGICA','EXP',1,'p_exp','sintatico.py',190),
  ('EXP_LOGICA -> PARAM_LOGICO OP_LOGICO EXP_LOGICA','EXP_LOGICA',3,'p_exp_logica','sintatico.py',194),
  ('EXP_LOGICA -> ( PARAM_LOGICO OP_LOGICO EXP_LOGICA )','EXP_LOGICA',5,'p_exp_logica','sintatico.py',195),
  ('EXP_LOGICA -> PARAM_LOGICO','EXP_LOGICA',1,'p_exp_logica','sintatico.py',196),
  ('PARAM_LOGICO -> PARAMETRO OP_COMP PARAMETRO','PARAM_LOGICO',3,'p_param_logico','sintatico.py',203),
  ('PARAM_LOGICO -> PARAMETRO','PARAM_LOGICO',1,'p_param_logico','sintatico.py',204),
  ('EXP_MAT -> PARAMETRO OP_MAT EXP_MAT','EXP_MAT',3,'p_exp_mat','sintatico.py',211),
  ('EXP_MAT -> ( PARAMETRO OP_MAT EXP_MAT )','EXP_MAT',5,'p_exp_mat','sintatico.py',212),
  ('EXP_MAT -> PARAMETRO','EXP_MAT',1,'p_exp_mat','sintatico.py',213),
  ('OP_LOGICO -> AND','OP_LOGICO',1,'p_op_logico','sintatico.py',221),
  ('OP_LOGICO -> OR','OP_LOGICO',1,'p_op_logico','sintatico.py',222),
  ('OP_COMP -> >','OP_COMP',1,'p_op_comp','sintatico.py',226),
  ('OP_COMP -> <','OP_COMP',1,'p_op_comp','sintatico.py',227),
  ('OP_COMP -> COMPARACAO','OP_COMP',1,'p_op_comp','sintatico.py',228),
  ('OP_MAT -> +','OP_MAT',1,'p_op_mat','sintatico.py',232),
  ('OP_MAT -> -','OP_MAT',1,'p_op_mat','sintatico.py',233),
  ('OP_MAT -> *','OP_MAT',1,'p_op_mat','sintatico.py',234),
  ('OP_MAT -> /','OP_MAT',1,'p_op_mat','sintatico.py',235),
  ('PARAMETRO -> ID','PARAMETRO',1,'p_parametro','sintatico.py',239),
  ('PARAMETRO -> NOME','PARAMETRO',1,'p_parametro','sintatico.py',240),
  ('PARAMETRO -> NUMERO','PARAMETRO',1,'p_parametro','sintatico.py',241),
  ('PARAMETRO -> FALSE','PARAMETRO',1,'p_parametro','sintatico.py',242),
  ('PARAMETRO -> TRUE','PARAMETRO',1,'p_parametro','sintatico.py',243),
  ('NOME -> . ID NOME','NOME',3,'p_nome','sintatico.py',248),
  ('NOME -> [ PARAMETRO ]','NOME',3,'p_nome','sintatico.py',249),
  ('NOME -> ( LISTA_PARAM )','NOME',3,'p_nome','sintatico.py',250),
  ('NOME -> <empty>','NOME',0,'p_nome','sintatico.py',251),
  ('LISTA_PARAM -> PARAMETRO , LISTA_PARAM','LISTA_PARAM',3,'p_lista_param','sintatico.py',258),
  ('LISTA_PARAM -> PARAMETRO','LISTA_PARAM',1,'p_lista_param','sintatico.py',259),
]
