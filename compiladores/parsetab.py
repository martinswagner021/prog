
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND ARRAY ATRIBUICAO_SIMBOLO BEGIN BOOLEAN CHAR COMPARACAO CONST DO ELSE END FALSE FOR FUNCTION ID IF INTEGER NUMERO OF OR PALAVRA PROCEDURE READ REAL RECORD THEN TO TRUE TYPE VAR WHILE WRITEPROGRAMA : DECLARACOES BLOCOBLOCO : BEGIN COMANDO LISTA_COM ENDDECLARACOES : DEF_CONST DEF_TIPOS DEF_VAR DEF_ROTINADEF_CONST : CONSTANTE DEF_CONST\n                 | DEF_TIPOS : TIPO DEF_TIPOS\n                 | DEF_VAR : VARIAVEL DEF_VAR\n               | DEF_ROTINA : ROTINA DEF_ROTINA\n               | CONSTANTE : CONST ID '=' CONST_VALOR ';'CONST_VALOR : PALAVRA\n                   | EXP_CONSTTIPO : TYPE ID '=' TIPO_DADO ';'VARIAVEL : VAR CAMPO ';'LISTA_ID : ',' ID LISTA_ID\n                | CAMPOS : CAMPO LISTA_CAMPOSCAMPO : ID LISTA_ID ':' TIPO_DADOLISTA_CAMPOS : ';' CAMPO LISTA_CAMPOS\n                | TIPO_DADO : INTEGER\n                 | REAL\n                 | CHAR\n                 | BOOLEAN\n                 | ARRAY '[' NUMERO ']' OF TIPO_DADO\n                 | RECORD CAMPOS END\n                 | IDROTINA : FUNCTION ID PARAM_ROTINA ':' TIPO_DADO BLOCO_ROTINA\n              | PROCEDURE ID PARAM_ROTINA BLOCO_ROTINAPARAM_ROTINA : '(' CAMPOS ')'\n                    | BLOCO_ROTINA : DEF_VAR BLOCOLISTA_COM : ';' COMANDO LISTA_COM\n                 | BLOCO_COM : BLOCO\n               | COMANDOCOMANDO : ID NOME ATRIBUICAO\n               | WHILE EXP_COM DO BLOCO_COM\n               | IF EXP_COM THEN BLOCO_COM ALTERNATIVA_ELSE\n               | FOR FOR_COMANDO DO BLOCO_COM\n               | WRITE CONST_VALOR\n               | READ ID NOMEFOR_COMANDO : ID ATRIBUICAO PARAMETRO TO PARAMETROALTERNATIVA_ELSE : ELSE BLOCO_COM\n                        | ATRIBUICAO : ATRIBUICAO_SIMBOLO EXPLISTA_PARAM : PARAMETRO ',' LISTA_PARAM\n                   | PARAMETRO\n                   | EXP : PARAMETRO EXP_L1\n           | '(' PARAMETRO EXP_L2EXP_L1 : OP_MAT EXP\n              | PARAM_LOGICO EXP_LOGICA\n              | EXP_LOGICA : OP_LOGICO EXP\n                  | PARAM_LOGICO : OP_COMP PARAMETRO\n                    | EXP_L2 : OP_MAT EXP ')'\n              | PARAM_LOGICO OP_LOGICO EXP ')'EXP_CONST : PARAMETRO EXP_CONST_L\n                 | '(' PARAMETRO OP_MAT EXP_CONST ')'EXP_CONST_L : OP_MAT EXP_CONST\n                   | EXP_COM : PARAMETRO PARAM_LOGICO EXP_COM_L\n               | '(' PARAMETRO PARAM_LOGICO OP_LOGICO EXP_COM ')'EXP_COM_L : OP_LOGICO EXP_COM\n                 | PARAMETRO : ID NOME\n                 | NUMERO\n                 | FALSE\n                 | TRUEOP_LOGICO : AND\n                 | OROP_COMP : '>'\n               | '<'\n               | COMPARACAOOP_MAT : '+'\n              | '-'\n              | '*'\n              | '/'NOME : '.' ID NOME\n            | '[' PARAMETRO ']'\n            | '(' LISTA_PARAM ')'\n            | "
    
_lr_action_items = {'TYPE':([0,3,4,9,11,98,126,],[-5,10,-5,10,-4,-12,-15,]),'VAR':([0,3,4,8,9,11,21,23,86,87,90,92,93,94,95,98,123,126,148,161,162,175,],[-5,-7,-5,22,-7,-4,22,-6,-33,-16,-29,-23,-24,-25,-26,-12,22,-15,-28,22,-32,-27,]),'FUNCTION':([0,3,4,8,9,11,20,21,23,49,52,57,87,98,126,143,163,170,],[-5,-7,-5,-9,-7,-4,50,-9,-6,50,-8,-2,-16,-12,-15,-31,-34,-30,]),'PROCEDURE':([0,3,4,8,9,11,20,21,23,49,52,57,87,98,126,143,163,170,],[-5,-7,-5,-9,-7,-4,51,-9,-6,51,-8,-2,-16,-12,-15,-31,-34,-30,]),'BEGIN':([0,2,3,4,8,9,11,20,21,23,48,49,52,57,65,73,74,84,86,87,90,92,93,94,95,98,123,126,138,143,144,148,161,162,163,170,175,],[-5,7,-7,-5,-9,-7,-4,-11,-9,-6,-3,-11,-8,-2,7,7,7,-10,-33,-16,-29,-23,-24,-25,-26,-12,-9,-15,7,-31,7,-28,-9,-32,-34,-30,-27,]),'CONST':([0,4,98,],[5,5,-12,]),'$end':([1,6,57,],[0,-1,-2,]),'ID':([5,7,10,15,16,17,18,19,22,25,27,29,30,31,34,35,36,37,38,46,50,51,55,60,61,65,67,68,69,70,72,73,74,75,77,78,79,80,81,89,97,100,101,102,103,104,105,106,111,112,113,114,120,122,124,130,131,132,136,138,139,141,150,151,152,153,154,155,166,168,171,173,176,],[12,14,24,35,35,41,35,47,54,35,14,61,35,35,35,-87,-72,-73,-74,35,85,86,90,35,-87,14,35,-77,-78,-79,-71,14,14,35,35,-80,-81,-82,-83,125,54,-48,-56,35,-84,-85,-86,35,35,-75,-76,-59,35,54,90,-52,35,-58,35,14,35,90,54,-54,-55,35,-53,35,-57,35,90,-61,-62,]),'WHILE':([7,27,65,73,74,138,],[15,15,15,15,15,15,]),'IF':([7,27,65,73,74,138,],[16,16,16,16,16,16,]),'FOR':([7,27,65,73,74,138,],[17,17,17,17,17,17,]),'WRITE':([7,27,65,73,74,138,],[18,18,18,18,18,18,]),'READ':([7,27,65,73,74,138,],[19,19,19,19,19,19,]),'=':([12,24,],[25,55,]),';':([13,35,36,37,38,42,43,44,45,47,53,56,57,58,59,61,72,76,83,90,91,92,93,94,95,100,101,103,104,105,107,108,109,114,116,117,119,129,130,132,137,145,148,151,152,154,158,160,165,166,173,175,176,],[27,-87,-72,-73,-74,-43,-13,-14,-66,-87,87,98,-2,27,-39,-87,-71,-63,-44,-29,126,-23,-24,-25,-26,-48,-56,-84,-85,-86,-40,-37,-38,-59,-47,-42,-65,150,-52,-58,-41,-20,-28,-54,-55,-53,-46,-64,150,-57,-61,-27,-62,]),'END':([13,26,35,36,37,38,42,43,44,45,47,57,58,59,61,72,76,83,90,92,93,94,95,99,100,101,103,104,105,107,108,109,114,116,117,119,128,129,130,132,137,145,148,149,151,152,154,158,160,165,166,172,173,175,176,],[-36,57,-87,-72,-73,-74,-43,-13,-14,-66,-87,-2,-36,-39,-87,-71,-63,-44,-29,-23,-24,-25,-26,-35,-48,-56,-84,-85,-86,-40,-37,-38,-59,-47,-42,-65,148,-22,-52,-58,-41,-20,-28,-19,-54,-55,-53,-46,-64,-22,-57,-21,-61,-27,-62,]),'.':([14,35,47,61,],[29,29,29,29,]),'[':([14,35,47,61,96,],[30,30,30,30,127,]),'(':([14,15,16,18,25,35,47,60,61,77,78,79,80,81,85,86,111,112,113,120,131,136,153,155,168,],[31,34,34,46,46,31,31,102,31,46,-80,-81,-82,-83,122,122,34,-75,-76,46,102,34,102,102,102,]),'ATRIBUICAO_SIMBOLO':([14,28,41,61,103,104,105,],[-87,60,60,-87,-84,-85,-86,]),'NUMERO':([15,16,18,25,30,31,34,35,36,37,38,46,60,61,67,68,69,70,72,75,77,78,79,80,81,100,101,102,103,104,105,106,111,112,113,114,120,127,130,131,132,136,139,151,152,153,154,155,166,168,173,176,],[36,36,36,36,36,36,36,-87,-72,-73,-74,36,36,-87,36,-77,-78,-79,-71,36,36,-80,-81,-82,-83,-48,-56,36,-84,-85,-86,36,36,-75,-76,-59,36,147,-52,36,-58,36,36,-54,-55,36,-53,36,-57,36,-61,-62,]),'FALSE':([15,16,18,25,30,31,34,35,36,37,38,46,60,61,67,68,69,70,72,75,77,78,79,80,81,100,101,102,103,104,105,106,111,112,113,114,120,130,131,132,136,139,151,152,153,154,155,166,168,173,176,],[37,37,37,37,37,37,37,-87,-72,-73,-74,37,37,-87,37,-77,-78,-79,-71,37,37,-80,-81,-82,-83,-48,-56,37,-84,-85,-86,37,37,-75,-76,-59,37,-52,37,-58,37,37,-54,-55,37,-53,37,-57,37,-61,-62,]),'TRUE':([15,16,18,25,30,31,34,35,36,37,38,46,60,61,67,68,69,70,72,75,77,78,79,80,81,100,101,102,103,104,105,106,111,112,113,114,120,130,131,132,136,139,151,152,153,154,155,166,168,173,176,],[38,38,38,38,38,38,38,-87,-72,-73,-74,38,38,-87,38,-77,-78,-79,-71,38,38,-80,-81,-82,-83,-48,-56,38,-84,-85,-86,38,38,-75,-76,-59,38,-52,38,-58,38,38,-54,-55,38,-53,38,-57,38,-61,-62,]),'PALAVRA':([18,25,],[43,43,]),')':([31,33,35,36,37,38,45,61,63,64,66,72,76,90,92,93,94,95,101,103,104,105,106,110,114,119,129,130,132,134,135,140,142,145,148,149,151,152,154,157,160,165,166,167,169,172,173,174,175,176,],[-51,-60,-87,-72,-73,-74,-66,-87,105,-50,-70,-71,-63,-29,-23,-24,-25,-26,-56,-84,-85,-86,-51,-67,-59,-65,-22,-52,-58,-49,-69,160,162,-20,-28,-19,-54,-55,-53,169,-64,-22,-57,173,-68,-21,-61,176,-27,-62,]),'DO':([32,33,35,36,37,38,40,61,66,72,103,104,105,110,114,135,159,169,],[65,-60,-87,-72,-73,-74,74,-87,-70,-71,-84,-85,-86,-67,-59,-69,-45,-68,]),'AND':([33,35,36,37,38,61,66,71,72,101,103,104,105,114,115,132,133,156,],[-60,-87,-72,-73,-74,-87,112,-60,-71,-60,-84,-85,-86,-59,112,112,-60,112,]),'OR':([33,35,36,37,38,61,66,71,72,101,103,104,105,114,115,132,133,156,],[-60,-87,-72,-73,-74,-87,113,-60,-71,-60,-84,-85,-86,-59,113,113,-60,113,]),'THEN':([33,35,36,37,38,39,61,66,72,103,104,105,110,114,135,169,],[-60,-87,-72,-73,-74,73,-87,-70,-71,-84,-85,-86,-67,-59,-69,-68,]),'>':([33,35,36,37,38,61,71,72,101,103,104,105,133,],[68,-87,-72,-73,-74,-87,68,-71,68,-84,-85,-86,68,]),'<':([33,35,36,37,38,61,71,72,101,103,104,105,133,],[69,-87,-72,-73,-74,-87,69,-71,69,-84,-85,-86,69,]),'COMPARACAO':([33,35,36,37,38,61,71,72,101,103,104,105,133,],[70,-87,-72,-73,-74,-87,70,-71,70,-84,-85,-86,70,]),'+':([35,36,37,38,45,61,72,82,101,103,104,105,133,],[-87,-72,-73,-74,78,-87,-71,78,78,-84,-85,-86,78,]),'-':([35,36,37,38,45,61,72,82,101,103,104,105,133,],[-87,-72,-73,-74,79,-87,-71,79,79,-84,-85,-86,79,]),'*':([35,36,37,38,45,61,72,82,101,103,104,105,133,],[-87,-72,-73,-74,80,-87,-71,80,80,-84,-85,-86,80,]),'/':([35,36,37,38,45,61,72,82,101,103,104,105,133,],[-87,-72,-73,-74,81,-87,-71,81,81,-84,-85,-86,81,]),'ELSE':([35,36,37,38,42,43,44,45,47,57,59,61,72,76,83,100,101,103,104,105,107,108,109,114,116,117,119,130,132,137,151,152,154,158,160,166,173,176,],[-87,-72,-73,-74,-43,-13,-14,-66,-87,-2,-39,-87,-71,-63,-44,-48,-56,-84,-85,-86,-40,-37,-38,-59,138,-42,-65,-52,-58,-41,-54,-55,-53,-46,-64,-57,-61,-62,]),']':([35,36,37,38,61,62,72,103,104,105,147,],[-87,-72,-73,-74,-87,104,-71,-84,-85,-86,164,]),',':([35,36,37,38,54,61,64,72,103,104,105,125,],[-87,-72,-73,-74,89,-87,106,-71,-84,-85,-86,89,]),'TO':([35,36,37,38,61,72,103,104,105,118,],[-87,-72,-73,-74,-87,-71,-84,-85,-86,139,]),':':([54,85,88,121,125,146,162,],[-18,-33,124,141,-18,-17,-32,]),'INTEGER':([55,124,141,171,],[92,92,92,92,]),'REAL':([55,124,141,171,],[93,93,93,93,]),'CHAR':([55,124,141,171,],[94,94,94,94,]),'BOOLEAN':([55,124,141,171,],[95,95,95,95,]),'ARRAY':([55,124,141,171,],[96,96,96,96,]),'RECORD':([55,124,141,171,],[97,97,97,97,]),'OF':([164,],[171,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'DECLARACOES':([0,],[2,]),'DEF_CONST':([0,4,],[3,11,]),'CONSTANTE':([0,4,],[4,4,]),'BLOCO':([2,65,73,74,138,144,],[6,108,108,108,108,163,]),'DEF_TIPOS':([3,9,],[8,23,]),'TIPO':([3,9,],[9,9,]),'COMANDO':([7,27,65,73,74,138,],[13,58,109,109,109,109,]),'DEF_VAR':([8,21,123,161,],[20,52,144,144,]),'VARIAVEL':([8,21,123,161,],[21,21,21,21,]),'LISTA_COM':([13,58,],[26,99,]),'NOME':([14,35,47,61,],[28,72,83,103,]),'EXP_COM':([15,16,111,136,],[32,39,135,157,]),'PARAMETRO':([15,16,18,25,30,31,34,46,60,67,75,77,102,106,111,120,131,136,139,153,155,168,],[33,33,45,45,62,64,71,82,101,114,118,45,133,64,33,45,101,33,159,101,101,101,]),'FOR_COMANDO':([17,],[40,]),'CONST_VALOR':([18,25,],[42,56,]),'EXP_CONST':([18,25,77,120,],[44,44,119,140,]),'DEF_ROTINA':([20,49,],[48,84,]),'ROTINA':([20,49,],[49,49,]),'CAMPO':([22,97,122,150,],[53,129,129,165,]),'ATRIBUICAO':([28,41,],[59,75,]),'LISTA_PARAM':([31,106,],[63,134,]),'PARAM_LOGICO':([33,71,101,133,],[66,115,132,156,]),'OP_COMP':([33,71,101,133,],[67,67,67,67,]),'EXP_CONST_L':([45,],[76,]),'OP_MAT':([45,82,101,133,],[77,120,131,155,]),'LISTA_ID':([54,125,],[88,146,]),'TIPO_DADO':([55,124,141,171,],[91,145,161,175,]),'EXP':([60,131,153,155,168,],[100,151,166,167,174,]),'BLOCO_COM':([65,73,74,138,],[107,116,117,158,]),'EXP_COM_L':([66,],[110,]),'OP_LOGICO':([66,115,132,156,],[111,136,153,168,]),'PARAM_ROTINA':([85,86,],[121,123,]),'CAMPOS':([97,122,],[128,142,]),'EXP_L1':([101,],[130,]),'ALTERNATIVA_ELSE':([116,],[137,]),'BLOCO_ROTINA':([123,161,],[143,170,]),'LISTA_CAMPOS':([129,165,],[149,172,]),'EXP_LOGICA':([132,],[152,]),'EXP_L2':([133,],[154,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> DECLARACOES BLOCO','PROGRAMA',2,'p_programa','sintatico.py',7),
  ('BLOCO -> BEGIN COMANDO LISTA_COM END','BLOCO',4,'p_bloco','sintatico.py',11),
  ('DECLARACOES -> DEF_CONST DEF_TIPOS DEF_VAR DEF_ROTINA','DECLARACOES',4,'p_declaracoes','sintatico.py',15),
  ('DEF_CONST -> CONSTANTE DEF_CONST','DEF_CONST',2,'p_def_const','sintatico.py',19),
  ('DEF_CONST -> <empty>','DEF_CONST',0,'p_def_const','sintatico.py',20),
  ('DEF_TIPOS -> TIPO DEF_TIPOS','DEF_TIPOS',2,'p_def_tipos','sintatico.py',27),
  ('DEF_TIPOS -> <empty>','DEF_TIPOS',0,'p_def_tipos','sintatico.py',28),
  ('DEF_VAR -> VARIAVEL DEF_VAR','DEF_VAR',2,'p_def_var','sintatico.py',35),
  ('DEF_VAR -> <empty>','DEF_VAR',0,'p_def_var','sintatico.py',36),
  ('DEF_ROTINA -> ROTINA DEF_ROTINA','DEF_ROTINA',2,'p_def_rotina','sintatico.py',43),
  ('DEF_ROTINA -> <empty>','DEF_ROTINA',0,'p_def_rotina','sintatico.py',44),
  ('CONSTANTE -> CONST ID = CONST_VALOR ;','CONSTANTE',5,'p_constante','sintatico.py',51),
  ('CONST_VALOR -> PALAVRA','CONST_VALOR',1,'p_const_valor','sintatico.py',55),
  ('CONST_VALOR -> EXP_CONST','CONST_VALOR',1,'p_const_valor','sintatico.py',56),
  ('TIPO -> TYPE ID = TIPO_DADO ;','TIPO',5,'p_tipo','sintatico.py',60),
  ('VARIAVEL -> VAR CAMPO ;','VARIAVEL',3,'p_variavel','sintatico.py',64),
  ('LISTA_ID -> , ID LISTA_ID','LISTA_ID',3,'p_lista_id','sintatico.py',68),
  ('LISTA_ID -> <empty>','LISTA_ID',0,'p_lista_id','sintatico.py',69),
  ('CAMPOS -> CAMPO LISTA_CAMPOS','CAMPOS',2,'p_campos','sintatico.py',76),
  ('CAMPO -> ID LISTA_ID : TIPO_DADO','CAMPO',4,'p_campo','sintatico.py',80),
  ('LISTA_CAMPOS -> ; CAMPO LISTA_CAMPOS','LISTA_CAMPOS',3,'p_lista_campos','sintatico.py',84),
  ('LISTA_CAMPOS -> <empty>','LISTA_CAMPOS',0,'p_lista_campos','sintatico.py',85),
  ('TIPO_DADO -> INTEGER','TIPO_DADO',1,'p_tipo_dado','sintatico.py',92),
  ('TIPO_DADO -> REAL','TIPO_DADO',1,'p_tipo_dado','sintatico.py',93),
  ('TIPO_DADO -> CHAR','TIPO_DADO',1,'p_tipo_dado','sintatico.py',94),
  ('TIPO_DADO -> BOOLEAN','TIPO_DADO',1,'p_tipo_dado','sintatico.py',95),
  ('TIPO_DADO -> ARRAY [ NUMERO ] OF TIPO_DADO','TIPO_DADO',6,'p_tipo_dado','sintatico.py',96),
  ('TIPO_DADO -> RECORD CAMPOS END','TIPO_DADO',3,'p_tipo_dado','sintatico.py',97),
  ('TIPO_DADO -> ID','TIPO_DADO',1,'p_tipo_dado','sintatico.py',98),
  ('ROTINA -> FUNCTION ID PARAM_ROTINA : TIPO_DADO BLOCO_ROTINA','ROTINA',6,'p_rotina','sintatico.py',109),
  ('ROTINA -> PROCEDURE ID PARAM_ROTINA BLOCO_ROTINA','ROTINA',4,'p_rotina','sintatico.py',110),
  ('PARAM_ROTINA -> ( CAMPOS )','PARAM_ROTINA',3,'p_param_rotina','sintatico.py',117),
  ('PARAM_ROTINA -> <empty>','PARAM_ROTINA',0,'p_param_rotina','sintatico.py',118),
  ('BLOCO_ROTINA -> DEF_VAR BLOCO','BLOCO_ROTINA',2,'p_bloco_rotina','sintatico.py',125),
  ('LISTA_COM -> ; COMANDO LISTA_COM','LISTA_COM',3,'p_lista_com','sintatico.py',129),
  ('LISTA_COM -> <empty>','LISTA_COM',0,'p_lista_com','sintatico.py',130),
  ('BLOCO_COM -> BLOCO','BLOCO_COM',1,'p_bloco_com','sintatico.py',137),
  ('BLOCO_COM -> COMANDO','BLOCO_COM',1,'p_bloco_com','sintatico.py',138),
  ('COMANDO -> ID NOME ATRIBUICAO','COMANDO',3,'p_comando','sintatico.py',141),
  ('COMANDO -> WHILE EXP_COM DO BLOCO_COM','COMANDO',4,'p_comando','sintatico.py',142),
  ('COMANDO -> IF EXP_COM THEN BLOCO_COM ALTERNATIVA_ELSE','COMANDO',5,'p_comando','sintatico.py',143),
  ('COMANDO -> FOR FOR_COMANDO DO BLOCO_COM','COMANDO',4,'p_comando','sintatico.py',144),
  ('COMANDO -> WRITE CONST_VALOR','COMANDO',2,'p_comando','sintatico.py',145),
  ('COMANDO -> READ ID NOME','COMANDO',3,'p_comando','sintatico.py',146),
  ('FOR_COMANDO -> ID ATRIBUICAO PARAMETRO TO PARAMETRO','FOR_COMANDO',5,'p_for_comando','sintatico.py',161),
  ('ALTERNATIVA_ELSE -> ELSE BLOCO_COM','ALTERNATIVA_ELSE',2,'p_alternativa_else','sintatico.py',165),
  ('ALTERNATIVA_ELSE -> <empty>','ALTERNATIVA_ELSE',0,'p_alternativa_else','sintatico.py',166),
  ('ATRIBUICAO -> ATRIBUICAO_SIMBOLO EXP','ATRIBUICAO',2,'p_atribuicao','sintatico.py',173),
  ('LISTA_PARAM -> PARAMETRO , LISTA_PARAM','LISTA_PARAM',3,'p_lista_param','sintatico.py',177),
  ('LISTA_PARAM -> PARAMETRO','LISTA_PARAM',1,'p_lista_param','sintatico.py',178),
  ('LISTA_PARAM -> <empty>','LISTA_PARAM',0,'p_lista_param','sintatico.py',179),
  ('EXP -> PARAMETRO EXP_L1','EXP',2,'p_exp','sintatico.py',188),
  ('EXP -> ( PARAMETRO EXP_L2','EXP',3,'p_exp','sintatico.py',189),
  ('EXP_L1 -> OP_MAT EXP','EXP_L1',2,'p_exp_l1','sintatico.py',198),
  ('EXP_L1 -> PARAM_LOGICO EXP_LOGICA','EXP_L1',2,'p_exp_l1','sintatico.py',199),
  ('EXP_L1 -> <empty>','EXP_L1',0,'p_exp_l1','sintatico.py',200),
  ('EXP_LOGICA -> OP_LOGICO EXP','EXP_LOGICA',2,'p_exp_logica','sintatico.py',211),
  ('EXP_LOGICA -> <empty>','EXP_LOGICA',0,'p_exp_logica','sintatico.py',212),
  ('PARAM_LOGICO -> OP_COMP PARAMETRO','PARAM_LOGICO',2,'p_param_logico','sintatico.py',220),
  ('PARAM_LOGICO -> <empty>','PARAM_LOGICO',0,'p_param_logico','sintatico.py',221),
  ('EXP_L2 -> OP_MAT EXP )','EXP_L2',3,'p_exp_l2','sintatico.py',229),
  ('EXP_L2 -> PARAM_LOGICO OP_LOGICO EXP )','EXP_L2',4,'p_exp_l2','sintatico.py',230),
  ('EXP_CONST -> PARAMETRO EXP_CONST_L','EXP_CONST',2,'p_exp_const','sintatico.py',238),
  ('EXP_CONST -> ( PARAMETRO OP_MAT EXP_CONST )','EXP_CONST',5,'p_exp_const','sintatico.py',239),
  ('EXP_CONST_L -> OP_MAT EXP_CONST','EXP_CONST_L',2,'p_exp_const_l','sintatico.py',246),
  ('EXP_CONST_L -> <empty>','EXP_CONST_L',0,'p_exp_const_l','sintatico.py',247),
  ('EXP_COM -> PARAMETRO PARAM_LOGICO EXP_COM_L','EXP_COM',3,'p_exp_com','sintatico.py',254),
  ('EXP_COM -> ( PARAMETRO PARAM_LOGICO OP_LOGICO EXP_COM )','EXP_COM',6,'p_exp_com','sintatico.py',255),
  ('EXP_COM_L -> OP_LOGICO EXP_COM','EXP_COM_L',2,'p_exp_com_l','sintatico.py',262),
  ('EXP_COM_L -> <empty>','EXP_COM_L',0,'p_exp_com_l','sintatico.py',263),
  ('PARAMETRO -> ID NOME','PARAMETRO',2,'p_parametro','sintatico.py',270),
  ('PARAMETRO -> NUMERO','PARAMETRO',1,'p_parametro','sintatico.py',271),
  ('PARAMETRO -> FALSE','PARAMETRO',1,'p_parametro','sintatico.py',272),
  ('PARAMETRO -> TRUE','PARAMETRO',1,'p_parametro','sintatico.py',273),
  ('OP_LOGICO -> AND','OP_LOGICO',1,'p_op_logico','sintatico.py',277),
  ('OP_LOGICO -> OR','OP_LOGICO',1,'p_op_logico','sintatico.py',278),
  ('OP_COMP -> >','OP_COMP',1,'p_op_comp','sintatico.py',282),
  ('OP_COMP -> <','OP_COMP',1,'p_op_comp','sintatico.py',283),
  ('OP_COMP -> COMPARACAO','OP_COMP',1,'p_op_comp','sintatico.py',284),
  ('OP_MAT -> +','OP_MAT',1,'p_op_mat','sintatico.py',288),
  ('OP_MAT -> -','OP_MAT',1,'p_op_mat','sintatico.py',289),
  ('OP_MAT -> *','OP_MAT',1,'p_op_mat','sintatico.py',290),
  ('OP_MAT -> /','OP_MAT',1,'p_op_mat','sintatico.py',291),
  ('NOME -> . ID NOME','NOME',3,'p_nome','sintatico.py',295),
  ('NOME -> [ PARAMETRO ]','NOME',3,'p_nome','sintatico.py',296),
  ('NOME -> ( LISTA_PARAM )','NOME',3,'p_nome','sintatico.py',297),
  ('NOME -> <empty>','NOME',0,'p_nome','sintatico.py',298),
]
